/*
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct TagLabel {
    #[serde(rename = "tagFQN")]
    pub tag_fqn: String,
    /// Unique name of the tag category.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Label type describes how a tag label was applied. 'Manual' indicates the tag label was applied by a person. 'Derived' indicates a tag label was derived using the associated tag relationship (see TagCategory.json for more details). 'Propagated` indicates a tag label was propagated from upstream based on lineage. 'Automated' is used when a tool was used to determine the tag label.
    #[serde(rename = "labelType")]
    pub label_type: LabelType,
    /// 'Suggested' state is used when a tag label is suggested by users or tools. Owner of the entity must confirm the suggested labels before it is marked as 'Confirmed'.
    #[serde(rename = "state")]
    pub state: State,
    /// URI that points to a resource.
    #[serde(rename = "href", skip_serializing_if = "Option::is_none")]
    pub href: Option<String>,
}

impl TagLabel {
    pub fn new(tag_fqn: String, label_type: LabelType, state: State) -> TagLabel {
        TagLabel {
            tag_fqn,
            description: None,
            label_type,
            state,
            href: None,
        }
    }
}

/// Label type describes how a tag label was applied. 'Manual' indicates the tag label was applied by a person. 'Derived' indicates a tag label was derived using the associated tag relationship (see TagCategory.json for more details). 'Propagated` indicates a tag label was propagated from upstream based on lineage. 'Automated' is used when a tool was used to determine the tag label.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum LabelType {
    #[serde(rename = "MANUAL")]
    MANUAL,
    #[serde(rename = "PROPAGATED")]
    PROPAGATED,
    #[serde(rename = "AUTOMATED")]
    AUTOMATED,
    #[serde(rename = "DERIVED")]
    DERIVED,
}

impl Default for LabelType {
    fn default() -> LabelType {
        Self::MANUAL
    }
}
/// 'Suggested' state is used when a tag label is suggested by users or tools. Owner of the entity must confirm the suggested labels before it is marked as 'Confirmed'.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum State {
    #[serde(rename = "SUGGESTED")]
    SUGGESTED,
    #[serde(rename = "CONFIRMED")]
    CONFIRMED,
}

impl Default for State {
    fn default() -> State {
        Self::SUGGESTED
    }
}
