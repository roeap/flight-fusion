/*
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct SqlQuery {
    /// SQL Query text that matches the table name.
    #[serde(rename = "query", skip_serializing_if = "Option::is_none")]
    pub query: Option<String>,
    /// How long did the query took to run in seconds.
    #[serde(rename = "duration", skip_serializing_if = "Option::is_none")]
    pub duration: Option<f64>,
    #[serde(rename = "user", skip_serializing_if = "Option::is_none")]
    pub user: Option<Box<crate::models::EntityReference>>,
    /// Users can vote up to rank the popular queries.
    #[serde(rename = "vote", skip_serializing_if = "Option::is_none")]
    pub vote: Option<f64>,
    /// Checksum to avoid registering duplicate queries.
    #[serde(rename = "checksum", skip_serializing_if = "Option::is_none")]
    pub checksum: Option<String>,
    /// Date in ISO 8601 format in UTC. Example - '2018-11-13'.
    #[serde(rename = "queryDate", skip_serializing_if = "Option::is_none")]
    pub query_date: Option<String>,
}

impl SqlQuery {
    pub fn new() -> SqlQuery {
        SqlQuery {
            query: None,
            duration: None,
            user: None,
            vote: None,
            checksum: None,
            query_date: None,
        }
    }
}
