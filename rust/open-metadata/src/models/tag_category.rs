/*
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct TagCategory {
    /// Name of the tag.
    #[serde(rename = "name")]
    pub name: String,
    /// Display Name that identifies this tag category.
    #[serde(rename = "displayName", skip_serializing_if = "Option::is_none")]
    pub display_name: Option<String>,
    /// Description of the tag category.
    #[serde(rename = "description")]
    pub description: String,
    /// Metadata version of the entity in the form `Major.Minor`. First version always starts from `0.1` when the entity is created. When the backward compatible changes are made to the entity, only the `Minor` version is incremented - example `1.0` is changed to `1.1`. When backward incompatible changes are made the `Major` version is incremented - example `1.1` to `2.0`.
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<f64>,
    /// Date and time in ISO 8601 format. Example - '2018-11-13T20:20:39+00:00'.
    #[serde(rename = "updatedAt", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<String>,
    /// User who made the update.
    #[serde(rename = "updatedBy", skip_serializing_if = "Option::is_none")]
    pub updated_by: Option<String>,
    /// Type of tag category.
    #[serde(rename = "categoryType")]
    pub category_type: CategoryType,
    /// URI that points to a resource.
    #[serde(rename = "href", skip_serializing_if = "Option::is_none")]
    pub href: Option<String>,
    /// Count of how many times the tags from this tag category are used.
    #[serde(rename = "usageCount", skip_serializing_if = "Option::is_none")]
    pub usage_count: Option<i32>,
    /// Tags under this category.
    #[serde(rename = "children", skip_serializing_if = "Option::is_none")]
    pub children: Option<Vec<crate::models::Tag>>,
    #[serde(rename = "changeDescription", skip_serializing_if = "Option::is_none")]
    pub change_description: Option<Box<crate::models::ChangeDescription>>,
}

impl TagCategory {
    pub fn new(name: String, description: String, category_type: CategoryType) -> TagCategory {
        TagCategory {
            name,
            display_name: None,
            description,
            version: None,
            updated_at: None,
            updated_by: None,
            category_type,
            href: None,
            usage_count: None,
            children: None,
            change_description: None,
        }
    }
}

/// Type of tag category.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CategoryType {
    #[serde(rename = "Descriptive")]
    Descriptive,
    #[serde(rename = "Classification")]
    Classification,
}

impl Default for CategoryType {
    fn default() -> CategoryType {
        Self::Descriptive
    }
}
