/*
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CreateUser {
    /// A unique name of the user, typically the user ID from an identity provider. Example - uid from LDAP.
    #[serde(rename = "name")]
    pub name: String,
    /// Used for user biography.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Name used for display purposes. Example 'FirstName LastName'
    #[serde(rename = "displayName", skip_serializing_if = "Option::is_none")]
    pub display_name: Option<String>,
    /// Email address of a user or other entities.
    #[serde(rename = "email")]
    pub email: String,
    /// Timezone of the user
    #[serde(rename = "timezone", skip_serializing_if = "Option::is_none")]
    pub timezone: Option<String>,
    /// When true indicates user is a bot with appropriate privileges
    #[serde(rename = "isBot", skip_serializing_if = "Option::is_none")]
    pub is_bot: Option<bool>,
    /// When true indicates user is an administrator for the system with superuser privileges
    #[serde(rename = "isAdmin", skip_serializing_if = "Option::is_none")]
    pub is_admin: Option<bool>,
    #[serde(rename = "profile", skip_serializing_if = "Option::is_none")]
    pub profile: Option<Box<crate::models::Profile>>,
    /// Teams that the user belongs to
    #[serde(rename = "teams", skip_serializing_if = "Option::is_none")]
    pub teams: Option<Vec<String>>,
}

impl CreateUser {
    pub fn new(name: String, email: String) -> CreateUser {
        CreateUser {
            name,
            description: None,
            display_name: None,
            email,
            timezone: None,
            is_bot: None,
            is_admin: None,
            profile: None,
            teams: None,
        }
    }
}
