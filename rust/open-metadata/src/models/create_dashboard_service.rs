/*
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CreateDashboardService {
    /// Name that identifies the this entity instance uniquely
    #[serde(rename = "name")]
    pub name: String,
    /// Description of dashboard service entity.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Type of Dashboard service - Superset, Looker, Redash or Tableau.
    #[serde(rename = "serviceType")]
    pub service_type: ServiceType,
    /// Dashboard Service URL
    #[serde(rename = "dashboardUrl")]
    pub dashboard_url: String,
    /// Username to log-into Dashboard Service
    #[serde(rename = "username", skip_serializing_if = "Option::is_none")]
    pub username: Option<String>,
    /// Password to log-into Dashboard Service
    #[serde(rename = "password", skip_serializing_if = "Option::is_none")]
    pub password: Option<String>,
    #[serde(rename = "ingestionSchedule", skip_serializing_if = "Option::is_none")]
    pub ingestion_schedule: Option<Box<crate::models::Schedule>>,
}

impl CreateDashboardService {
    pub fn new(
        name: String,
        service_type: ServiceType,
        dashboard_url: String,
    ) -> CreateDashboardService {
        CreateDashboardService {
            name,
            description: None,
            service_type,
            dashboard_url,
            username: None,
            password: None,
            ingestion_schedule: None,
        }
    }
}

/// Type of Dashboard service - Superset, Looker, Redash or Tableau.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ServiceType {
    #[serde(rename = "Superset")]
    Superset,
    #[serde(rename = "Looker")]
    Looker,
    #[serde(rename = "Tableau")]
    Tableau,
    #[serde(rename = "Redash")]
    Redash,
    #[serde(rename = "Metabase")]
    Metabase,
}

impl Default for ServiceType {
    fn default() -> ServiceType {
        Self::Superset
    }
}
