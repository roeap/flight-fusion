/*
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Thread {
    /// Unique id used to identify an entity.
    #[serde(rename = "id")]
    pub id: String,
    /// URI that points to a resource.
    #[serde(rename = "href", skip_serializing_if = "Option::is_none")]
    pub href: Option<String>,
    /// Date and time in ISO 8601 format. Example - '2018-11-13T20:20:39+00:00'.
    #[serde(rename = "threadTs", skip_serializing_if = "Option::is_none")]
    pub thread_ts: Option<String>,
    /// Link to an entity or field within an entity using this format `<#E/{enties}/{entityName}/{field}/{fieldValue}`.
    #[serde(rename = "about")]
    pub about: String,
    /// Link to an entity or field within an entity using this format `<#E/{enties}/{entityName}/{field}/{fieldValue}`.
    #[serde(rename = "addressedTo", skip_serializing_if = "Option::is_none")]
    pub addressed_to: Option<String>,
    #[serde(rename = "posts")]
    pub posts: Vec<crate::models::Post>,
}

impl Thread {
    pub fn new(id: String, about: String, posts: Vec<crate::models::Post>) -> Thread {
        Thread {
            id,
            href: None,
            thread_ts: None,
            about,
            addressed_to: None,
            posts,
        }
    }
}
