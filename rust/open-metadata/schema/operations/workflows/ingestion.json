{
  "$id": "https://open-metadata.org/schema/operations/workflows/ingestion.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Ingestion",
  "description": "Ingestion Config is used to setup a Airflow Ingestion pipeline.",
  "type": "object",
  "definitions": {
    "ingestionType": {
      "description": "Type of Ingestion - Bigquery, Redshift, Snowflake etc...",
      "type": "string",
      "enum": [
        "bigquery",
        "bigquery-usage",
        "redshift",
        "redshift-usage",
        "snowflake",
        "snowflake-usage",
        "hive",
        "mssql",
        "mysql",
        "postgres",
        "presto",
        "trino",
        "vertica"
      ],
      "javaEnums": [
        {
          "name": "bigquery"
        },
        {
          "name": "bigquery_usage"
        },
        {
          "name": "redshift"
        },
        {
          "name": "redshift_usage"
        },
        {
          "name": "snowflake"
        },
        {
          "name": "snowflake_usage"
        },
        {
          "name": "hive"
        },
        {
          "name": "mssql"
        },
        {
          "name": "looker"
        },
        {
          "name": "presto"
        },
        {
          "name": "postgres"
        },
        {
          "name": "redash"
        },
        {
          "name": "salesforce"
        },
        {
          "name": "superset"
        },
        {
          "name": "trino"
        },
        {
          "name": "vertica"
        }
      ]
    },
    "connectorConfig": {
      "type": "object",
      "javaType": "org.openmetadata.catalog.operations.workflows.ConnectorConfig",
      "description": "This defines the configuration for connector.",
      "properties": {
        "username": {
          "description": "username to connect  to the data source.",
          "type": "string"
        },
        "password": {
          "description": "password to connect  to the data source.",
          "type": "string"
        },
        "host": {
          "description": "Host and port of the data source.",
          "type": "string"
        },
        "database": {
          "description": "Database of the data source.",
          "type": "string"
        },
        "includeViews": {
          "description": "optional configuration to turn off fetching metadata for views.",
          "type": "boolean",
          "default": "true"
        },
        "enableDataProfiler": {
          "description": "Run data profiler as part of ingestion to get table profile data.",
          "type": "boolean",
          "default": "false"
        },
        "includeFilterPattern": {
          "description": "Regex to only fetch tables or databases that matches the pattern.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": null
        },
        "excludeFilterPattern": {
          "description": "Regex exclude tables or databases that matches the pattern.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": null
        }
      }
    },
    "ingestionStatus": {
      "type": "object",
      "javaType": "org.openmetadata.catalog.operations.workflows.IngestionStatus",
      "description": "This defines the runtime status of Ingestion.",
      "properties": {
        "state": {
          "description": "Workflow status denotes if its failed or succeeded.",
          "type": "string"
        },
        "startDate": {
          "description": "startDate of the Ingestion Pipeline run for this particular execution.",
          "type": "string"
        },
        "endDate": {
          "description": "endDate of the Ingestion pipeline run for this particular execution.",
          "type": "string"
        }
      }
    }
  },
  "properties" : {
    "id": {
      "description": "Unique identifier that identifies this Ingestion.",
      "$ref": "../../type/basic.json#/definitions/uuid"
    },
    "name": {
      "description": "Name that identifies this ingestion instance uniquely.",
      "type": "string",
      "minLength": 1,
      "maxLength": 128
    },
    "displayName": {
      "description": "Display Name that identifies this Ingestion.",
      "type": "string"
    },
    "description": {
      "description": "Description of the workflow.",
      "type": "string"
    },
    "owner": {
      "description": "Owner of this Ingestion.",
      "$ref": "../../type/entityReference.json",
      "default": null
    },
    "fullyQualifiedName": {
      "description": "Name that uniquely identifies a Ingestion.",
      "type": "string",
      "minLength": 1,
      "maxLength": 256
    },
    "ingestionType": {
      "$ref": "#/definitions/ingestionType"
    },
    "tags": {
      "description": "Tags associated with the Ingestion.",
      "type": "array",
      "items": {
        "$ref": "../../type/tagLabel.json"
      },
      "default": null
    },
    "forceDeploy": {
      "description": "Deploy the workflow by overwriting existing workflow with the same name.",
      "type": "boolean",
      "default": "false"
    },
    "pauseWorkflow": {
      "description": "pause the workflow from running once the deploy is finished successfully.",
      "type": "boolean",
      "default": "false"
    },
    "concurrency": {
      "description": "Concurrency of the Pipeline.",
      "type": "integer",
      "default": 1
    },
    "startDate": {
      "description": "Start date of the workflow.",
      "$ref": "../../type/basic.json#/definitions/date"
    },
    "endDate": {
      "description": "End Date of the workflow.",
      "$ref": "../../type/basic.json#/definitions/date"
    },
    "nextExecutionDate": {
      "description": "Next execution date from the underlying workflow platform once the ingestion scheduled.",
      "$ref": "../../type/basic.json#/definitions/date"
    },
    "workflowTimezone": {
      "description": "Timezone in which workflow going to be scheduled.",
      "type": "string",
      "default": "UTC"
    },
    "retries": {
      "description": "Retry workflow in case of failure.",
      "type": "integer",
      "default": 1
    },
    "retryDelay": {
      "description": "Delay between retries in seconds.",
      "type": "integer",
      "default": 300
    },
    "workflowCatchup": {
      "description": "Run past executions if the start date is in the past.",
      "type": "boolean",
      "default": "false"
    },
    "scheduleInterval": {
      "description": "Scheduler Interval for the Workflow in cron format.",
      "type": "string"
    },
    "workflowTimeout": {
      "description": "Timeout for the workflow in seconds.",
      "type": "integer",
      "default": 60
    },
    "connectorConfig": {
      "$ref": "#/definitions/connectorConfig"
    },
    "ingestionStatuses": {
      "description": "List of executions and status for the Ingestion Pipeline.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/ingestionStatus"
      },
      "default": null
    },
    "service" : {
      "description": "Link to the database service where this database is hosted in.",
      "$ref" : "../../type/entityReference.json"
    },
    "href": {
      "description": "Link to this ingestion resource.",
      "$ref": "../../type/basic.json#/definitions/href"
    },
    "version" : {
      "description": "Metadata version of the entity.",
      "$ref": "../../type/entityHistory.json#/definitions/entityVersion"
    },
    "updatedAt" : {
      "description": "Last update time corresponding to the new version of the entity.",
      "$ref": "../../type/basic.json#/definitions/dateTime"
    },
    "updatedBy" : {
      "description": "User who made the update.",
      "type": "string"
    },
    "changeDescription": {
      "description" : "Change that led to this version of the entity.",
      "$ref": "../../type/entityHistory.json#/definitions/changeDescription"
    }
  },
  "required": ["name", "service", "connectorConfig", "startDate"],
  "additionalProperties": false
}
