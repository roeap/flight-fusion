{
  "name": "vscode-fusion",
  "displayName": "vscode-fusion",
  "description": "vs code integration with mlfusion services",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.66.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:vscode-fusion.helloWorld",
    "onView:mlfusion-models"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "mlfusion-explorer",
          "title": "MlFusion",
          "icon": "$(project)"
        }
      ]
    },
    "views": {
      "mlfusion-explorer": [
        {
          "id": "mlfusion-models",
          "name": "Models",
          "icon": "$(symbol-class)",
          "contextualTitle": "Models"
        }
      ]
    },
    "commands": [
      {
        "command": "vscode-fusion.models.refreshList",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "vscode-fusion.models.loadModel",
        "title": "Load model",
        "icon": "$(notebook-execute)"
      },
      {
        "command": "vscode-fusion.models.unloadModel",
        "title": "Unload model",
        "icon": "$(notebook-stop)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "vscode-fusion.models.refreshList",
          "when": "view == mlfusion-models",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "vscode-fusion.models.loadModel",
          "when": "view == mlfusion-models && viewItem == mlfusion-model",
          "group": "inline"
        },
        {
          "command": "vscode-fusion.models.unloadModel",
          "when": "view == mlfusion-models && viewItem == mlfusion-model",
          "group": "inline"
        }
      ]
    },
    "configuration": {
      "title": "Ml Fusion",
      "properties": {
        "mlfusion.host": {
          "type": "string",
          "default": "localhost",
          "description": "Host url for ml-fusion service"
        },
        "mlfusion.port": {
          "type": "integer",
          "default": 8081,
          "description": "Port to use when connecting to service."
        },
        "mlfusion.ssl": {
          "type": "boolean",
          "default": false,
          "description": "Denotes if SSL is used when connecting to service."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "yarn run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "yarn run compile-tests && yarn run compile && yarn run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^7.2.0",
    "@types/mocha": "^9.1.0",
    "@types/node": "14.x",
    "@types/vscode": "^1.66.0",
    "@typescript-eslint/eslint-plugin": "^5.16.0",
    "@typescript-eslint/parser": "^5.16.0",
    "@vscode/test-electron": "^2.1.3",
    "eslint": "^8.11.0",
    "glob": "^7.2.0",
    "mocha": "^9.2.2",
    "ts-loader": "^9.2.8",
    "typescript": "^4.5.5",
    "webpack": "^5.70.0",
    "webpack-cli": "^4.9.2"
  },
  "dependencies": {
    "nice-grpc": "^1.1.0",
    "ts-proto": "^1.110.4"
  }
}
