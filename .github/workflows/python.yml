name: Python

on:
  #   push:
  #     tags: ["python-v*"]
  push:
    branches: [main]
  pull_request:
    branches: [main]

# defaults:
#   run:
#     working-directory: ./python

jobs:
  lint:
    # TODO run tests with matrix strategy
    # strategy:
    #     fail-fast: false
    #     matrix:
    #       python-version: [3.8, 3.9, 3.10]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install minimal stable with clippy and rustfmt
        uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: stable
          override: true

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install rust backed packages
        run: make python-develop

      - name: Install pyright
        run: npm install -g pyright

      - name: Check Rust
        run: make rust-check

      - name: Check Python
        run: make python-check

  test:
    runs-on: ubuntu-latest
    # use the same environment we have for python release
    container: quay.io/pypa/manylinux2010_x86_64:2020-12-31-4928808
    steps:
      # actions/checkout@v2 is a node action, which runs on a fairly new
      # version of node. however, manylinux environment's glibc is too old for
      # that version of the node. so we will have to use v1 instead, which is a
      # docker based action.
      - uses: actions/checkout@v1

      # Require for building openssl-sys
      - name: Install perl-IPC/Cmd
        run: yum install -y perl-IPC-Cmd

      # actions-rs/toolchain@v1 is a node action, which runs on a fairly new
      # version of node. however, manylinux environment's glibc is too old for
      # that version of the node. so we will have to install rust manually here.
      - name: Install Rust
        run: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          $HOME/.cargo/bin/rustup default stable
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Enable manylinux Python targets
        run: echo "/opt/python/cp36-cp36m/bin" >> $GITHUB_PATH

      - name: Build and install flight-fusion
        run: |
          pip install virtualenv
          virtualenv venv
          source venv/bin/activate
          pip install maturin
          make python-develop

      - name: Run tests
        run: |
          source venv/bin/activate
          make python-test

      # - name: Run Integration tests
      #   run: |
      #     py.test --cov tests -m integration
