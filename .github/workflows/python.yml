name: Python

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.10"
        toolchain:
          - "stable"

    steps:
      - uses: actions/checkout@v3

      - name: Setup Rust Toolchain
        uses: actions-rs/toolchain@v1
        id: rust-toolchain
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true

      - name: Setup Python
        uses: actions/setup-python@v2
        id: setup-python
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install protobuf compiler in /protoc
        run: |
          sudo mkdir /protoc
          sudo chmod a+rwx /protoc
          cd /protoc
          curl -LO https://github.com/protocolbuffers/protobuf/releases/download/v21.4/protoc-21.4-linux-x86_64.zip
          unzip protoc-21.4-linux-x86_64.zip

      - uses: Swatinem/rust-cache@v1

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install native dependencies
        run: |
          export PATH=$PATH:/protoc/bin
          poetry run maturin develop -m python/flight-fusion-server/Cargo.toml --extras=devel $(MATURIN_EXTRA_ARGS)

      - name: Install pyright
        run: npm install -g pyright

      - name: Run linters
        run: |
          poetry run black --check .
          poetry run pyright python/

      - name: Run python tests
        run: |
          poetry run pytest -v .
        env:
          RUST_BACKTRACE: "1"
