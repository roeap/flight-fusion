{{- if .Values.fusion.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "flight-fusion.fullname" . }}
  labels:
    {{- include "flight-fusion.labels" . | nindent 4 }}
    app.kubernetes.io/component: flight-fusion
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "flight-fusion.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: flight-fusion
  template:
    metadata:
      labels:
        {{- include "flight-fusion.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: flight-fusion
      annotations:
        checksum/app-config: {{ include (print $.Template.BasePath "/ff_configmap.yaml") . | sha256sum }}
        rollme: {{ .Chart.Name }}-{{ .Chart.Version }}-revision-{{ .Release.Revision }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ include "flight-fusion.fullname" . }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.containerPort }}
          {{- if .Values.securityContext.enabled }}
          securityContext:
            runAsUser: {{ .Values.securityContext.runAsUser }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          envFrom:
            - configMapRef:
                name: {{ template "flight-fusion.fullname" . }}
            {{- if .Values.envConfigMaps -}}
            {{- range $name := .Values.envConfigMaps }}
            {{- if $name }}
            - configMapRef:
                name: {{ $name }}
            {{- end }}
            {{- end }}
            {{- end }}
            {{- if .Values.envSecrets -}}
            {{- range $name := .Values.envSecrets }}
            {{- if $name }}
            - secretRef:
                name: {{ $name }}
            {{- end }}
            {{- end }}
            {{- end }}
          # livenessProbe:
          #   httpGet:
          #     path: /health
          #     port: {{ .Values.containerPort }}
          # readinessProbe:
          #   httpGet:
          #     path: /health
          #     port: {{ .Values.containerPort }}
          volumeMounts:
            - mountPath: /opt/fusion/{{ .Values.cache.root }}
              name: cache-volume
            - name: fusion-config
              mountPath: /opt/fusion/config/Default.toml
              subPath: Default.toml
              readOnly: true
            - name: fusion-config
              mountPath: /opt/fusion/config/Production.toml
              subPath: Production.toml
              readOnly: true
      volumes:
        - name: cache-volume
          emptyDir: {}
        - name: fusion-config
          configMap:
            name: {{ template "flight-fusion.fullname" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
