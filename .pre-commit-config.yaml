# To use this, install the python package `pre-commit` and
# run once `pre-commit install`. This will setup a git pre-commit-hook
# that is executed on each commit and will report the linting problems.
# To run all hooks on all files use `pre-commit run -a`

repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.0.1
    hooks:
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-yaml
      - id: end-of-file-fixer
      - id: mixed-line-ending
      - id: trailing-whitespace

  # - repo: https://github.com/doublify/pre-commit-rust
  #   rev: v1.0
  #   hooks:
  #     - id: fmt
  #     # - id: cargo-check
  #     # - id: clippy

  # - repo: local
  #   hooks:
  #     - id: rustfmt
  #       name: Rust Format
  #       language: system
  #       entry: bash -c "cargo +stable fmt --all -- --check"
  #       files: ^.*\.rs$
  #       types:
  #         - file
  #         - rust
  #     - id: rustclippy
  #       name: Rust Clippy
  #       language: system
  #       entry: bash -c "cargo +stable clippy --all-targets --all-features -- -D warnings"
  #       files: ^.*\.rs$
  #       types:
  #         - file
  #         - rust
  # - id: cmake-format
  #   name: CMake Format
  #   language: python
  #   entry: python run-cmake-format.py
  #   types: [cmake]
  #   additional_dependencies:
  #     - cmake_format==0.5.2
  # - id: hadolint
  #   name: Docker Format
  #   language: docker_image
  #   types:
  #    - dockerfile
  #   entry: --entrypoint /bin/hadolint hadolint/hadolint:latest -
  #   exclude: ^dev/.*$
