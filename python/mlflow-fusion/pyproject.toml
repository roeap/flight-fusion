[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "mlflow-fusion"
version = "0.1.0"
description = "MlFlow plugins for MlFusion platform"
readme = "README.md"
authors = ["Robert Pack <robstar.pack@gmail.com>"]
license = "MIT"
repository = "https://github.com/roeap/flight-fusion"
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Manufacturing",
  "License :: OSI Approved :: Apache Software License",
  "License :: OSI Approved",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
]

[tool.poetry.dependencies]
python = "^3.8,<3.11"
betterproto = "2.0.0b4"
mlflow = "^1.26"
pydantic = { version = ">=1", extras = ["dotenv"] }

[tool.poetry.dev-dependencies]
flight-fusion = { path = "../flight-fusion" }
pytest = "^6.2.5"
pytest-azurepipelines = "^1"
pytest-datadir = "^1.3.1"
pytest-cov = "^3"
pytest-mock = "*"

[tool.poetry.plugins."mlflow.artifact_repository"]
fusion = "mlflow_fusion.artifacts:FusionArtifactRepository"

[tool.poetry.plugins."mlflow.run_context_provider"]
unused = "mlflow_fusion.context:FusionRunContextProvider"

# [tool.poetry.plugins."mlflow.request_header_provider"]
# request_header_provider = "mlflow_fusion.request_headers:ArgusRequestHeaderProvider"

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
addopts = "--cov=mlflow_fusion -v -m 'not integration'"
testpaths = ["tests"]
markers = [
  "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
  "azure: marks tests as integration tests with Azure (deselect with '-m \"not azure\"')",
]
